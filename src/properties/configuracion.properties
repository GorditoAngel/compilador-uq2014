                            

tituloVentana = Analizador Lexico 
Analizar = Analizar
codigo = Digite el texto para analizar :
tablaTokens = Tabla de tokens
limpiar = Limpiar
tablaErrores = Tabla de Errores
cargarImagen= Cargar Imagen

Entero = Entero
Real = real
IdClase = Identificador de Clase
IdMetodo = Identificador de Metodo
IdVariable = Identificador de Variable
Break = Break
Clase = Clase
Paquete = Paquete
Private = Private
Public = Public
ReservadaEntero = Reservada Entero
ReservadaFor = Reservada For
ReservadaReal = Reservada Real
ReservadaReturn = Reservada Return
ReservadaWhile = Reservada While
OperadorDivision = Operador Division
OperadorMultiplicacion = Operador Multiplicacion 
OperadorMatematico = Operador Matematico
OperadorResta = Operador Resta
OperadorSuma = Operador Suma
OperadorRelacionalII = Operador Relacional[==]
OperadorRelacionalMayor = Operador Relacional[>]
OperadorRelacional = Operador Relacional
OperadorRelacionalMayorI = Operador Relacional[>=]
OperadorRelacionalMenor = Operador Relacional[<]
OperadorRelacionalMenorI = Operador Relacional[<=]
OperadorLogicoO = Operador Logico[ó]
OperadorLogicoY = Logico[y]
OperadorAsignacion = Operador Asignacion
AperturaParentesis = Apertura de Parentesis
CierreParentesis = Cierre de Parentesis
AbrirLlaves = Apertura de Llaves
CerrarLLaves = Cierre de Llaves
FinSentencia = Fin de Sentencia
Comentario = Comentario de Bloque
Cadena = Cadena
operadorNegacion = Operador Negación

separador = separador

cargarCodigo = Cargar Codigo
cargarReservadas = Cargar Reservadas

lexema = Lexema
tipo = Tipo
fila = Fila
columna = Columna

error = Lexema desconocido
palabraReservada = Palabra reservada 
desvorde = La palabra excede los 30 caracteres
cargar = Cargar

# Nombre Arboles
unidadCompilacion = Unidad de Compilacion
when = When
retorno = Retorno
operacion = Operacion
invocacionMetodo = Invocacion Metodo
argumentos = Argumentos
expresionMatematica = Exprecion Matematica
operaciones = Operaciones
expresionComparacion = Expresion de comparacion
dosPuntos = :
declaracionVariable = Declaracion de Variables
declaracionMetodo = Declaracion de Metodo
cuerpoCiclo = Cuerpo de Ciclo
listaSentencias = Lista de Sentencias
cuerpoMetodo = Cuerpo de Metodo
cuerpoClase = Cuerpo de la Clase
listaDeclaraciones = Lista de Declaraciones
listaAsignaciones = Lista de Asignaciones
listaMetodos = Lista de Metodos
declaracionClase = Declaracion de Clase
cicloWhile = Ciclo While
asignacion = Asignacion
argumento = Argumento

# Errores
errorIdentificador1 = El identificador corresponde a un identificador de metodo
errorIdentificador2 = El identificador corresponde a un identificador de clase
errorNombreParametro = Falta el nombre del parametro
errorFaltaTipoDato = Falta el tipo de dato
errorFaltaSeparador = Falta el separador
errorFaltaModificadorAcceso = Falta modificador de acceso
errorFaltaIdClase = Falta el identificador de la clase
errorFaltaCuerpoClase = Falta el cuerpo de la clase
errorFaltaVariables = Faltan las variables
puntoyComa = ;
errorOperadorAsignacion = Falta operador de asignacion
errorFaltaValor = Falta asignar algun valor
errorFaltaValorComparar = Falta el valor a comparar
errorFaltaOperadorRelacional = Falta el operador relacional
errorFaltaValorOperacion = Falta el valor para realizar la operacion

# Tokens
publico = <+>
privado = <->